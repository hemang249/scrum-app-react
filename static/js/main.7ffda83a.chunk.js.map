{"version":3,"sources":["serviceWorker.js","config.js","helpers/auth.js","components/register/Register.js","components/login/Login.js","components/header/Header.js","helpers/board.js","components/board-card/BoardCard.js","components/home/Home.js","helpers/ticket.js","components/ticket/Ticket.js","components/category-column/CategoryColumn.js","components/board/Board.js","routes/Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","API","setUser","user","sessionStorage","setItem","JSON","stringify","getUser","parse","getItem","getToken","registerUser","email","username","password","a","fetch","method","headers","Accept","body","res","json","console","log","loginUser","Register","props","useState","loading","success","error","state","setState","handleChange","e","target","name","value","isFormValid","className","to","Container","Form","Alert","variant","Group","controlId","Label","Control","onChange","type","placeholder","Button","onClick","preventDefault","then","data","catch","err","disabled","size","block","Login","token","Header","Navbar","fixed","bg","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","href","eventKey","setBoard","board","createBoard","userId","Authorization","updateBoard","_id","getAllBoards","BoardCard","redirect","setRedirect","Card","style","width","Body","Title","toUpperCase","Text","createdBy","Home","showModal","boards","useEffect","handleClose","onSubmit","renderModalForm","Modal","show","onHide","closeButton","Footer","content","len","length","iterations","Math","ceil","i","push","Row","Col","key","renderBoards","createTicket","title","category","boardId","Ticket","ticket","CategoryColumn","tickets","hasBeenCreated","list","setList","concat","map","t","Board","updateBoardTickets","b","todoTickets","doingTickets","doneTickets","Routes","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7ffda83a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const API = \"http://frozen-savannah-60279.herokuapp.com/api\";\n","import { API } from \"../config\";\n\nexport const setUser = (user) => {\n  sessionStorage.setItem(\"user\", JSON.stringify(user));\n};\n\nexport const getUser = () => {\n  return JSON.parse(sessionStorage.getItem(\"user\"));\n};\n\nexport const setToken = (token) => {\n  sessionStorage.setItem(\"token\", JSON.stringify(token));\n};\n\nexport const getToken = () => {\n  return JSON.parse(sessionStorage.getItem(\"token\"));\n};\n\nexport const registerUser = async (email, username, password) => {\n  try {\n    const res = await fetch(`${API}/register`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, username, password }),\n    });\n    return await res.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nexport const loginUser = async (email, password) => {\n  try {\n    const res = await fetch(`${API}/login`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    return await res.json();\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\nimport \"./Register.css\";\nimport { registerUser, setUser } from \"../../helpers/auth\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Register = (props) => {\n  const [state, setState] = useState({\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    loading: false,\n    success: false,\n    error: null,\n  });\n  const { email, username, password, loading, success, error } = state;\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      setState({ ...state, loading: true });\n      registerUser(email, username, password)\n        .then((data) => {\n          setState({\n            ...state,\n            loading: false,\n            success: true,\n            email: \"\",\n            password: \"\",\n            username: \"\",\n          });\n          setUser(data);\n        })\n        .catch((err) => {\n          setState({\n            ...state,\n            loading: false,\n            success: false,\n            error: err,\n            email: \"\",\n            password: \"\",\n            username: \"\",\n          });\n          console.log(err);\n        });\n    }\n  };\n\n  const isFormValid = () => {\n    if (!email || !username || !password) {\n      setState({ ...state, error: \"Please fillout all the fields\" });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const renderError = () => {\n    if (error) {\n      return <Alert variant=\"danger\">{error}</Alert>;\n    } else return null;\n  };\n\n  return (\n    <div className=\"register\">\n      {success && <Redirect to=\"/\" />}\n      <Container className=\"my-4 text-center\">\n        <h2>Scrum App</h2>\n      </Container>\n\n      <Container className=\"register-container\">\n        <Form className=\"register-form\">\n          {renderError()}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              onChange={handleChange}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicText\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Pick a Username\"\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              onChange={handleChange}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Enter a password\"\n            />\n          </Form.Group>\n\n          <div className=\"text-center my-4\">\n            <Button\n              onClick={handleSubmit}\n              disabled={loading}\n              variant=\"warning\"\n              type=\"submit\"\n              size=\"md\"\n              block\n            >\n              {loading ? \"Loading...\" : \"Submit\"}\n            </Button>\n            <p className=\"text-light my-3\">\n              Already a User ?{\" \"}\n              <Link className=\"text-light\" to=\"/\">\n                Login Here\n              </Link>\n            </p>\n          </div>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Form, Button, Alert } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { loginUser, setUser, setToken } from \"../../helpers/auth\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Login = (props) => {\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    loading: false,\n    success: false,\n    error: null,\n  });\n  const { email, password, loading, success, error } = state;\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      setState({ ...state, loading: true });\n      loginUser(email, password)\n        .then((data) => {\n          setState({\n            ...state,\n            loading: false,\n            success: true,\n            email: \"\",\n            password: \"\",\n          });\n          setUser(data.user);\n          setToken(data.token);\n        })\n        .catch((err) => {\n          setState({\n            ...state,\n            loading: false,\n            success: false,\n            error: \"Incorrect Email or Password!\",\n            email: \"\",\n            password: \"\",\n          });\n          console.log(err);\n        });\n    }\n  };\n\n  const isFormValid = () => {\n    if (!email || !password) {\n      setState({ ...state, error: \"Please fillout all the fields\" });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const renderError = () => {\n    if (error) {\n      return <Alert variant=\"danger\">{error}</Alert>;\n    } else return null;\n  };\n\n  return (\n    <div className=\"login\">\n      {success && <Redirect to=\"/home\" />}\n      <Container className=\"my-4 text-center\">\n        <h2>Scrum App</h2>\n      </Container>\n\n      <Container className=\"login-container\">\n        <Form className=\"login-form\">\n          {renderError()}\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              onChange={handleChange}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              placeholder=\"Enter email\"\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              onChange={handleChange}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              placeholder=\"Enter a password\"\n            />\n          </Form.Group>\n\n          <div className=\"text-center my-4\">\n            <Button\n              onClick={handleSubmit}\n              disabled={loading}\n              variant=\"warning\"\n              type=\"submit\"\n              size=\"md\"\n              block\n            >\n              {loading ? \"Loading...\" : \"Submit\"}\n            </Button>\n            <p className=\"text-light my-3\">\n              Not a User ?{\" \"}\n              <Link className=\"text-light\" to=\"/register\">\n                Register Here\n              </Link>\n            </p>\n          </div>\n        </Form>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst Header = (props) => {\n  return (\n    <Navbar fixed=\"top\" bg=\"primary\" variant=\"dark\">\n      <Navbar.Brand className=\"text-center\">\n        <strong>Scrum App</strong>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\"></Nav>\n        <Nav>\n          <Nav.Link className=\"text-light\" href=\"/home\">\n            Home\n          </Nav.Link>\n          <Nav.Link className=\"text-light\" eventKey={2} href=\"/\">\n            Logout\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import { API } from \"../config\";\n\nexport const setBoard = (board) => {\n  sessionStorage.setItem(\"board\", JSON.stringify(board));\n};\n\nexport const getBoard = () => {\n  return JSON.parse(sessionStorage.getItem(\"board\"));\n};\n\nexport const createBoard = async (name, userId, token) => {\n  try {\n    const res = await fetch(`${API}/board/${userId}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ name }),\n    });\n    return await res.json();\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const updateBoard = async (board, userId, token) => {\n  try {\n    const res = await fetch(`${API}/board/${board._id}/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ board }),\n    });\n    return await res.json();\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getAllBoards = async (userId, token) => {\n  try {\n    const res = await fetch(`${API}/board/all/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return await res.json();\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport \"./BoardCard.css\";\nimport { setBoard } from \"../../helpers/board\";\nimport { Redirect } from \"react-router-dom\";\n\nconst BoardCard = (props) => {\n  const [redirect, setRedirect] = useState(false);\n\n  const onClick = (e) => {\n    setBoard(props.board);\n    setRedirect(true);\n  };\n\n  return (\n    <div>\n      {redirect && <Redirect to=\"/board\" />}\n      <Card className=\"board\" style={{ width: \"18rem\" }}>\n        <Card.Body>\n          <Card.Title className=\"text-light\">\n            {props.board.name.toUpperCase()}\n          </Card.Title>\n          <Card.Text className=\"text-light\">\n            Created By :{\" \"}\n            <span className=\"text-primary\">\n              {props.board.createdBy.username}\n            </span>\n          </Card.Text>\n          <div className=\"my-4\">\n            <br /> <br />\n            <Button onClick={onClick} variant=\"primary\" block>\n              View Board\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default BoardCard;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../header/Header\";\nimport {\n  Form,\n  Alert,\n  Row,\n  Col,\n  Container,\n  Modal,\n  Button,\n} from \"react-bootstrap\";\nimport \"./Home.css\";\nimport BoardCard from \"../board-card/BoardCard\";\nimport CreateBoardCard from \"../create-board-card/CreateBoardCard\";\nimport { getAllBoards, setBoard, createBoard } from \"../../helpers/board\";\nimport { getUser, getToken } from \"../../helpers/auth\";\n\nconst Home = (props) => {\n  const [state, setState] = useState({\n    showModal: false,\n    name: \"\",\n    error: null,\n    success: false,\n    loading: false,\n    boards: [],\n    user: null,\n    token: null,\n  });\n  const {\n    showModal,\n    user,\n    token,\n    name,\n    error,\n    success,\n    loading,\n    boards,\n  } = state;\n\n  useEffect(() => {\n    const token = getToken();\n    const user = getUser();\n    getAllBoards(user._id, token)\n      .then((data) => {\n        console.log(data);\n        setState({ ...state, user, token, boards: data.boards });\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  const toggleModal = (e) => {\n    setState({ ...state, showModal: true });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, showModal: false });\n  };\n\n  const handleChange = (e) =>\n    setState({ ...state, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setState({ ...state, loading: true });\n    createBoard(name, user._id, token)\n      .then((data) => {\n        setState({\n          ...state,\n          loading: false,\n          success: true,\n          showModal: false,\n          name: \"\",\n          error: null,\n        });\n        setBoard(data.board);\n        const token = getToken();\n        const user = getUser();\n        getAllBoards(user._id, token)\n          .then((data) => {\n            console.log(data);\n            setState({\n              ...state,\n              loading: false,\n              success: true,\n              showModal: false,\n              name: \"\",\n              error: null,\n              boards: data.boards,\n            });\n          })\n          .catch((err) => console.log(err));\n      })\n      .catch((err) => {\n        setState({\n          ...state,\n          loading: false,\n          success: false,\n          showModal: true,\n          name: \"\",\n          error: \"Unable to create the board. Try again later.\",\n        });\n      });\n  };\n\n  const renderError = () => {\n    if (error) {\n      return <Alert variant=\"danger\">{error}</Alert>;\n    } else return null;\n  };\n\n  const renderModalForm = () => {\n    return (\n      <Form>\n        {renderError()}\n        <Form.Group controlId=\"formBasicText\">\n          <Form.Label>Board Name</Form.Label>\n          <Form.Control\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Enter board name...\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  };\n\n  const renderCreateBoardModal = () => {\n    return (\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create A New Board</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{renderModalForm()}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button onClick={onSubmit} disabled={loading} variant=\"primary\">\n            {loading ? \"Loading...\" : \"Save Changes\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n\n  const renderBoards = () => {\n    let content = [];\n\n    let len = boards.length;\n    let iterations = Math.ceil(len / 3);\n    for (let i = 0; i < iterations; i++) {\n      content.push(\n        <Row className=\"my-4\">\n          {boards[3 * i] && (\n            <Col>\n              <BoardCard key={boards[3 * i]._id} board={boards[3 * i + 0]} />\n            </Col>\n          )}\n          {boards[3 * i + 1] ? (\n            <Col>\n              <BoardCard\n                key={boards[3 * i + 1]._id}\n                board={boards[3 * i + 1]}\n              />\n            </Col>\n          ) : null}\n          {boards[3 * i + 2] ? (\n            <Col>\n              <BoardCard\n                key={boards[3 * i + 2]._id}\n                board={boards[3 * i + 2]}\n              />\n            </Col>\n          ) : null}\n        </Row>\n      );\n      return content;\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n\n      <Container className=\"home\">\n        {renderCreateBoardModal()}\n        <h4>Your Boards</h4>\n        <Button variant=\"primary\" size=\"md\" onClick={toggleModal}>\n          Create Board\n        </Button>\n        {renderBoards()}\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","import { API } from \"../config\";\n\nexport const createTicket = async (title, category, boardId, userId, token) => {\n  try {\n    const res = await fetch(`${API}/ticket/${boardId}/${userId}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ title, category }),\n    });\n    return await res.json();\n  } catch (err) {\n    return err;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport \"./Ticket.css\";\n\nconst Ticket = ({ ticket }) => {\n  return (\n    <div className=\"ticket-card my-3 p-2\">\n      {ticket.title}\n      <br />\n      Created By : {ticket.createdBy.username}\n    </div>\n  );\n};\n\nexport default Ticket;\n","import React, { useState, useEffect } from \"react\";\nimport \"./CategoryColumn.css\";\nimport { createTicket } from \"../../helpers/ticket\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport Ticket from \"../ticket/Ticket\";\nimport { ReactSortable } from \"react-sortablejs\";\n\nconst CategoryColumn = ({\n  board,\n  user,\n  token,\n  name,\n  category,\n  updateBoard,\n  tickets,\n}) => {\n  const [state, setState] = useState({\n    hasBeenCreated: false,\n    title: \"\",\n    showModal: false,\n    loading: false,\n  });\n  const [list, setList] = useState(tickets);\n  const { title, loading, showModal } = state;\n\n  const handleChange = (e) =>\n    setState({ ...state, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setState({ ...state, loading: true });\n    createTicket(title, category, board._id, user._id, token)\n      .then((data) => {\n        setState({ ...state, loading: false, showModal: false });\n        setList(list.concat(data.ticket));\n        updateBoard(category, data.ticket);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleClose = () => setState({ ...state, showModal: false });\n\n  const toggleModal = () => setState({ ...state, showModal: true });\n\n  const renderModalForm = () => {\n    return (\n      <Form>\n        <Form.Group controlId=\"formBasicText\">\n          <Form.Label>Ticket Title</Form.Label>\n          <Form.Control\n            name=\"title\"\n            value={title}\n            onChange={handleChange}\n            type=\"text\"\n            placeholder=\"Enter column name...\"\n          />\n        </Form.Group>\n      </Form>\n    );\n  };\n\n  const renderCreateTicketModal = () => {\n    return (\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Create A New Column</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{renderModalForm()}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button onClick={onSubmit} disabled={loading} variant=\"primary\">\n            {loading ? \"Loading...\" : \"Save Changes\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  };\n  return (\n    <div className=\"category text-center p-3  m-4\">\n      <h4>{name}</h4>\n      {renderCreateTicketModal()}\n      <Button onClick={toggleModal} className=\"my-3\" block variant=\"warning\">\n        Add Ticket\n      </Button>\n      <ReactSortable list={list} setList={setList}>\n        {list.map((t) => (\n          <Ticket ticket={t} key={t._id} />\n        ))}\n      </ReactSortable>\n    </div>\n  );\n};\n\nexport default CategoryColumn;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"../header/Header\";\nimport \"./Board.css\";\nimport CategoryColumn from \"../category-column/CategoryColumn\";\nimport { getBoard, updateBoard, setBoard } from \"../../helpers/board\";\nimport { getToken, getUser } from \"../../helpers/auth\";\n\nconst Board = (props) => {\n  const [state, setState] = useState({\n    user: null,\n    token: null,\n    board: null,\n    loading: true,\n  });\n  const { token, user, board } = state;\n\n  useEffect(() => {\n    const token = getToken();\n    const user = getUser();\n    const board = getBoard();\n    setState({ ...state, token, user, board });\n  }, []);\n\n  const updateBoardTickets = (category, ticket) => {\n    const b = board;\n    b[`${category}Tickets`].push(ticket);\n    setState({ ...state, board: b, loading: true });\n    updateBoard(board, user._id, token)\n      .then((data) => {\n        setState({ ...state, board: data.board, loading: false });\n      })\n      .catch((err) => {\n        console.log(err);\n        setState({ ...state, loading: false });\n      });\n  };\n\n  if (board) {\n    return (\n      <div>\n        <Header />\n        <div className=\"board-container\">\n          <CategoryColumn\n            updateBoard={updateBoardTickets}\n            category=\"todo\"\n            name=\"To Do\"\n            tickets={board.todoTickets}\n            user={user}\n            token={token}\n            board={board}\n          />\n          <CategoryColumn\n            updateBoard={updateBoardTickets}\n            category=\"doing\"\n            name=\"Doing\"\n            tickets={board.doingTickets}\n            user={user}\n            token={token}\n            board={board}\n          />\n          <CategoryColumn\n            category=\"done\"\n            updateBoard={updateBoardTickets}\n            name=\"Done\"\n            tickets={board.doneTickets}\n            user={user}\n            token={token}\n            board={board}\n          />\n        </div>\n      </div>\n    );\n  } else return <div> Loading ....</div>;\n};\n\nexport default Board;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Register from \"../components/register/Register\";\nimport Login from \"../components/login/Login\";\nimport Home from \"../components/home/Home\";\nimport Board from \"../components/board/Board\";\n\nconst Routes = (props) => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/board\" component={Board} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Routes from \"./routes/Routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}